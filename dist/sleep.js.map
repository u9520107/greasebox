{"version":3,"sources":["sleep.js"],"names":[],"mappings":";;;;;;;;;;;iBASwB,KAAK;AAAd,SAAS,KAAK,CAAC,CAAC,EAAE;AAC/B,GAAC,GAAG,EAAC,CAAC,CAAC,CAAC;AACR,MAAI,CAAC,GAAG,CAAC,EAAE;AACT,WAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAK;AAC9B,gBAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,MAAM;AACL,WAAO,OAAO,CAAC,OAAO,EAAE,CAAC;GAC1B;CACF","file":"sleep.js","sourceRoot":"/source/","sourcesContent":["/**\n * @exports default\n * @function\n * @param {Number} t - time in milliseconds\n *  Asynchronously sleeps for time t when used in generator context.\n *  Returns a promise if promises are prefered.\n *  Thunk based sleep is lighter, but isnt' as flexible.\n */\n\nexport default function sleep(t) {\n  t = ~~t;\n  if (t > 0) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, t);\n    });\n  } else {\n    return Promise.resolve();\n  }\n}\n"]}