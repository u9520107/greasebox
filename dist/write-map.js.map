{"version":3,"sources":["write-map.js"],"names":[],"mappings":";;;;;;IAAO,OAAO,2BAAM,UAAU;;IACvB,IAAI,2BAAM,MAAM;;IAChB,KAAK,2BAAM,WAAW;;IACtB,KAAK,2BAAM,OAAO;;AAEzB,IAAM,mBAAmB,GAAG,0BAA0B,CAAC;;AAEvD,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE;AAC3B,MAAI,CAAC,GAAG,EAAE;AACR,OAAG,GAAG,MAAM,CAAC;GACd;AACD,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AAC5C,QAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACjB,aAAO,IAAI,EAAE,CAAC;KACf,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;AACzB,UAAI,UAAU,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;;AAEzD,UAAI,UAAU,KAAK,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;AAC5C,YAAI,SAAS,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;AAC3D,YAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;;;;;;;;;AAUlE,cAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACtC,mBAAO,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;WACzC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAChC,mBAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;WAC1C,MAAM;AACL,mBAAO,IAAI,CAAC;WACb;SACF,CAAC,CAAC;AACH,YAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;OACxC;AACD,UAAI,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC;AAC3B,YAAI,EAAE,IAAI,CAAC,IAAI;AACf,WAAG,EAAE,IAAI,CAAC,GAAG;AACb,YAAI,EAAE,IAAI,CAAC,IAAI,GAAG,GAAG;AACrB,gBAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;OACrD,CAAC,CAAC;;;AAGH,UAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACtC,UAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACjC,WAAG,oCAAkC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,AAAE,CAAC;AACnE,YAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;OACjC;;AAED,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB,MAAM;AACL,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjB;AACD,QAAI,EAAE,CAAC;GACR,CAAC,CAAC;CACJ;;;;AAID,SAAS,YAAY,CAAC,MAAM,EAAE;AAC5B,SAAO,MAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;CAC3D;iBACc,QAAQ","file":"write-map.js","sourceRoot":"/source/","sourcesContent":["import through from 'through2';\nimport path from 'path';\nimport gutil from 'gulp-util';\nimport chalk from 'chalk';\n\nconst hasSourceMappingUrl = /^\\/\\/# sourceMappingURL=/;\n\nfunction writeMap(root, ext) {\n  if (!ext) {\n    ext = '.map';\n  }\n  return through.obj(function (file, enc, next) {\n    if (file.isNull()) {\n      return next();\n    } else if (file.sourceMap) {\n      var sourceRoot = root ? root : file.sourceMap.sourceRoot;\n      //replace\n      if (sourceRoot !== file.sourceMap.sourceRoot) {\n        var nameCheck = new RegExp('^' + escapeRegExp(sourceRoot));\n        file.sourceMap.sources = file.sourceMap.sources.map(function (name) {\n          /**\n           *  Else cases happens when transformation had gone through file name changes.\n           *  e.g. .jsx => .js\n           *  Or when transforms have included compiled code from other sources\n           *  eg. traceur's @tranceur runtime files\n           *\n           *  Marks to be difficult to test after using 6to5 instead of traceur.\n           */\n          /* istanbul ignore else */\n          if (name[0] !== '/' && name[0] !== '@') {\n            return file.sourceMap.sourceRoot + name;\n          } else if (name.match(nameCheck)) {\n            return name.substring(sourceRoot.length);\n          } else {\n            return name;\n          }\n        });\n        file.sourceMap.sourceRoot = sourceRoot;\n      }\n      var mapFile = new gutil.File({\n        base: file.base,\n        cwd: file.cwd,\n        path: file.path + ext,\n        contents: new Buffer(JSON.stringify(file.sourceMap))\n      });\n\n      // add sourceMappingURL if not found in source\n      var src = file.contents.toString(enc);\n      if(!hasSourceMappingUrl.test(src)) {\n        src += `\\n\\n//# sourceMappingURL=./${path.basename(mapFile.path)}`;\n        file.contents = new Buffer(src);\n      }\n\n      this.push(file);\n      this.push(mapFile);\n    } else {\n      this.push(file);\n    }\n    next();\n  });\n}\n/**\n *  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nfunction escapeRegExp(string) {\n  return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n}\nexport default writeMap;\n"]}