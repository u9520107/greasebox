{"version":3,"sources":["to5-transform.js"],"names":[],"mappings":";;;;IAAO,OAAO,sCAAM,UAAU;;IACvB,QAAQ,sCAAM,wBAAwB;;IACtC,KAAK,sCAAM,OAAO;;IAClB,KAAK,sCAAM,OAAO;;IAClB,GAAG,sCAAM,MAAM;;AAEtB,IAAI,GAAG,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;;AAEhC,SAAS,YAAY,GAAY;MAAX,IAAI,gCAAG,EAAE;AAC7B,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE;AAC1C,QAAI;AACF,UAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACjB,eAAO,EAAE,EAAE,CAAC;OACb,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;AAC1C,YAAI,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;AACpC,YAAI,CAAC,SAAS,GAAG,YAAY,CAAC;;AAE9B,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;AAC1B,YAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;;AAEtC,YAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACtC,YAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9D,YAAG,YAAY,IAAI,MAAM,CAAC,GAAG,EAAE;AAC7B,gBAAM,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;AACpE,kBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,cAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B;AACD,YAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxC,YAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC7B,cAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACjD;AACD,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB,MAAM;AACL,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB;AACD,QAAE,EAAE,CAAC;KACN,CAAC,OAAO,GAAG,EAAE;AACZ,aAAO,CAAC,GAAG,OAAM,KAAK,CAAC,IAAI,CAAE,cAAc,CAAE,8BAA0B,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAG,CAAC;AACjG,SAAG,CAAC,GAAG,CAAC,CAAC;AACT,QAAE,CAAC,GAAG,CAAC,CAAC;KACT;GACF,CAAC,CAAC;CACJ;iBACc,YAAY","file":"to5-transform.js","sourceRoot":"/source/","sourcesContent":["import through from 'through2';\nimport applyMap from 'vinyl-sourcemaps-apply';\nimport debug from 'debug';\nimport chalk from 'chalk';\nimport to5 from '6to5';\n\nlet log = debug('to5Transform');\n\nfunction to5Transform(opts = {}) {\n  return through.obj(function (file, enc, cb) {\n    try {\n      if (file.isNull()) {\n        return cb();\n      } else if (file.path.match(/\\.(js|jsx)$/i)) {\n        var useSourceMap = !!file.sourceMap;\n        opts.sourceMap = useSourceMap;\n\n        opts.filename = file.path;\n        opts.filenameRelative = file.relative;\n\n        var src = file.contents.toString(enc);\n        var output = to5.transform(file.contents.toString(enc), opts);\n        if(useSourceMap && output.map) {\n          output.map.sourceRoot = file.buildStep || file.sourceMap.sourceRoot;\n          applyMap(file, output.map);\n          file.buildStep = '@6to5/';\n        }\n        file.contents = new Buffer(output.code);\n        if(file.path.match(/\\.jsx$/i)) {\n          file.path = file.path.replace(/\\.jsx$/i, '.js');\n        }\n        this.push(file);\n      } else {\n        this.push(file);\n      }\n      cb();\n    } catch (err) {\n      console.log(`[${ chalk.cyan( 'to5Transform' ) }] Failed to transform ${chalk.red( file.path )}`);\n      log(err);\n      cb(err);\n    }\n  });\n}\nexport default to5Transform;\n"]}