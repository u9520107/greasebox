{"version":3,"sources":["cofs.js"],"names":[],"mappings":";;;;IAAO,QAAQ,2BAAM,UAAU;;IACxB,EAAE,2BAAM,IAAI;;IACZ,QAAQ,2BAAM,aAAa;;;;;AAIlC,IAAI,OAAO,GAAG,CACZ,QAAQ,EACR,WAAW,EACX,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,SAAS,EACT,UAAU,EACV,UAAU,EACV,QAAQ,EACR,OAAO,EACP,OAAO,EACP,SAAS,EACT,OAAO,EACP,MAAM,EACN,QAAQ,EACR,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACN,UAAU,EACV,WAAW,EACX,YAAY,CACb,CAAC;AACF,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;;AAE9B,MAAI,EAAE,CAAC,IAAI,CAAC,EAAE;AACZ,QAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;GACjC;CACF,CAAC,CAAC;AACH,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE;AAC5B,SAAO,UAAU,IAAI,EAAE;AACrB,MAAE,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAChC,UAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC;CACH,CAAC;AACF,IAAI,CAAC,gBAAgB,GAAG,YAAY;AAClC,SAAO,QAAQ,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;CAC7D,CAAC;iBACa,IAAI","file":"cofs.js","sourceRoot":"/source/","sourcesContent":["import thunkify from 'thunkify';\nimport fs from 'fs';\nimport coStream from './co-stream';\n/**\n *  cofs module derives from tj/co-fs.\n */\nvar methods = [\n  'rename',\n  'ftruncate',\n  'chown',\n  'fchown',\n  'lchown',\n  'chmod',\n  'fchmod',\n  'stat',\n  'lstat',\n  'fstat',\n  'link',\n  'symlink',\n  'readlink',\n  'realpath',\n  'unlink',\n  'rmdir',\n  'mkdir',\n  'readdir',\n  'close',\n  'open',\n  'utimes',\n  'futimes',\n  'fsync',\n  'write',\n  'read',\n  'readFile',\n  'writeFile',\n  'appendFile'\n];\nvar cofs = {};\nmethods.forEach(function (name) {\n  /* istanbul ignore else */\n  if (fs[name]) {\n    cofs[name] = thunkify(fs[name]);\n  }\n});\ncofs.exists = function (path) {\n  return function (done) {\n    fs.stat(path, function (err, res) {\n      done(null, !err);\n    });\n  };\n};\ncofs.createReadStream = function () {\n  return coStream(fs.createReadStream.apply(null, arguments));\n};\nexport default cofs;\n"]}