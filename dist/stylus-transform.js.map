{"version":3,"sources":["stylus-transform.js"],"names":[],"mappings":";;;;IAAO,OAAO,2BAAM,UAAU;;IACvB,QAAQ,2BAAM,qBAAqB;;IACnC,QAAQ,2BAAM,wBAAwB;;IACtC,IAAI,2BAAM,MAAM;;IAChB,KAAK,2BAAM,OAAO;;IAClB,KAAK,2BAAM,OAAO;;AAEzB,IAAI,GAAG,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;;;;;AAKnC,SAAS,eAAe,GAAG;AACzB,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AAC5C,QAAI;AACF,UAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACjB,eAAO,IAAI,EAAE,CAAC;OACf,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AACrC,YAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACtC,YAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;AACrC,YAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;AAClD,YAAI,aAAa,EAAE;AACjB,cAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;AACD,YAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACvC,YAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC/B,YAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AACnC,YAAI,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,EAAE;AACxC,cAAI,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC;AAC7B,aAAG,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,aAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,kBAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACpB,cAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;AACD,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACjD,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB,MAAM;AACL,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB;AACD,UAAI,EAAE,CAAC;KACR,CAAC,OAAO,GAAG,EAAE;AACZ,aAAO,CAAC,GAAG,OAAM,KAAK,CAAC,IAAI,CAAE,iBAAiB,CAAE,8BAA0B,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAG,CAAC;AACpG,SAAG,CAAC,GAAG,CAAC,CAAC;AACT,UAAI,CAAC,GAAG,CAAC,CAAC;KACX;GACF,CAAC,CAAC;CACJ;iBACc,eAAe","file":"stylus-transform.js","sourceRoot":"/source/","sourcesContent":["import through from 'through2';\nimport Renderer from 'stylus/lib/renderer';\nimport applyMap from 'vinyl-sourcemaps-apply';\nimport path from 'path';\nimport chalk from 'chalk';\nimport debug from 'debug';\n\nlet log = debug('stylusTransform');\n/**\n * @function\n *\n */\nfunction stylusTransform() {\n  return through.obj(function (file, enc, next) {\n    try {\n      if (file.isNull()) {\n        return next();\n      } else if (file.path.match(/\\.styl$/)) {\n        var src = file.contents.toString(enc);\n        var useSourceMaps = !!file.sourceMap;\n        var opts = { filename: path.basename(file.path) };\n        if (useSourceMaps) {\n          opts.sourcemap = 'comment';\n        }\n        var renderer = new Renderer(src, opts);\n        var output = renderer.render();\n        file.contents = new Buffer(output);\n        if (file.sourceMap && renderer.sourcemap) {\n          var map = renderer.sourcemap;\n          map.sourcesContent = [src];\n          map.sourceRoot = file.buildStep;\n          applyMap(file, map);\n          file.buildStep = '@stylus/';\n        }\n        file.path = file.path.replace(/\\.styl$/, '.css');\n        this.push(file);\n      } else {\n        this.push(file);\n      }\n      next();\n    } catch (err) {\n      console.log(`[${ chalk.cyan( 'stylusTransform' ) }] Failed to transform ${chalk.red( file.path )}`);\n      log(err);\n      next(err);\n    }\n  });\n}\nexport default stylusTransform;\n"]}