{"version":3,"sources":["remove-css.js"],"names":[],"mappings":";;;;;;IAAO,OAAO,2BAAM,UAAU;;IACvB,MAAM,2BAAM,QAAQ;;IACpB,QAAQ,2BAAM,wBAAwB;;IACtC,KAAK,2BAAM,OAAO;;;;;;AAKzB,SAAS,SAAS,GAAG;AACnB,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AAC5C,QAAI;AACF,UAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACjB,eAAO,IAAI,EAAE,CAAC;OACf,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;AACzC,YAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACvF,YAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,WAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACvC,cAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAC7E,MAAM;AACL,gBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;WACjB;SACF,CAAC,CAAC;AACH,WAAG,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACxB,YAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjE,YAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxC,YAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,GAAG,EAAE;AAChC,gBAAM,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,kBAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,cAAI,CAAC,SAAS,GAAG,cAAc,CAAC;SACjC;AACD,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB,MAAM;AACL,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACjB;AACD,UAAI,EAAE,CAAC;KACR,CAAC,OAAO,GAAG,EAAE;AACZ,aAAO,CAAC,GAAG,OAAM,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,8BAA0B,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAG,CAAC;AAC9F,UAAI,CAAC,GAAG,CAAC,CAAC;KACX;GACF,CAAC,CAAC;CACJ;iBACc,SAAS","file":"remove-css.js","sourceRoot":"/source/","sourcesContent":["import through from 'through2';\nimport recast from 'recast';\nimport applyMap from 'vinyl-sourcemaps-apply';\nimport chalk from 'chalk';\n/**\n * @function\n *\n */\nfunction removeCss() {\n  return through.obj(function (file, enc, next) {\n    try {\n      if (file.isNull()) {\n        return next();\n      } else if (file.path.match(/\\.(js|jsx)$/)) {\n        var ast = recast.parse(file.contents.toString(enc), { sourceFileName: file.relative });\n        var body = [];\n        //remove css imports\n        ast.program.body.forEach(function (part) {\n          if (part.type === 'ImportDeclaration' && part.source.value.match(/\\.css!$/i)) {\n          } else {\n            body.push(part);\n          }\n        });\n        ast.program.body = body;\n        var output = recast.print(ast, { sourceMapName: file.relative });\n        file.contents = new Buffer(output.code);\n        if (file.sourceMap && output.map) {\n          output.map.sourceRoot = file.buildStep;\n          applyMap(file, output.map);\n          file.buildStep = '@remove-css/';\n        }\n        this.push(file);\n      } else {\n        this.push(file);\n      }\n      next();\n    } catch (err) {\n      console.log(`[${ chalk.cyan( 'removeCss' ) }] Failed to transform ${chalk.red( file.path )}`);\n      next(err);\n    }\n  });\n}\nexport default removeCss;\n"]}